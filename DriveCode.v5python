{"mode":"Text","hardwareTarget":"brain","textContent":"#region VEXcode Generated Robot Configuration\nfrom vex import *\nimport urandom\n\n# Brain should be defined by default\nbrain=Brain()\n\n# Robot configuration code\nLeftMotor = Motor(Ports.PORT10, GearSetting.RATIO_18_1, False)\nRightMotor = Motor(Ports.PORT1, GearSetting.RATIO_18_1, False)\ncontroller_1 = Controller(PRIMARY)\n\n\n# wait for rotation sensor to fully initialize\nwait(30, MSEC)\n\n\n# Make random actually random\ndef initializeRandomSeed():\n    wait(100, MSEC)\n    random = brain.battery.voltage(MV) + brain.battery.current(CurrentUnits.AMP) * 100 + brain.timer.system_high_res()\n    urandom.seed(int(random))\n      \n# Set random seed \ninitializeRandomSeed()\n\n\ndef play_vexcode_sound(sound_name):\n    # Helper to make playing sounds from the V5 in VEXcode easier and\n    # keeps the code cleaner by making it clear what is happening.\n    print(\"VEXPlaySound:\" + sound_name)\n    wait(5, MSEC)\n\n# add a small delay to make sure we don't print in the middle of the REPL header\nwait(200, MSEC)\n# clear the console to make sure we don't have the REPL in the console\nprint(\"\\033[2J\")\n\n#endregion VEXcode Generated Robot Configuration\n\n# ------------------------------------------\n# \n# \tProject:      VEXcode Project\n#\tAuthor:       VEX\n#\tCreated:\n#\tDescription:  VEXcode V5 Python Project\n# \n# ------------------------------------------\n\n# Library imports\nfrom vex import *\n\n# Max Velocity %\nvelocityPercent = 50 # Setup Max Velocity Reference\n\n# Stored Motor Values\nleftVelocity = 0 # Setup LeftMotor Velocity Store\nrightVelocity = 0 # Setup RightMotor Velocity Store\n\n# Initiate Motors\nLeftMotor.set_velocity(0, PERCENT) # Set Velocity to 0\nRightMotor.set_velocity(0, PERCENT) # Set Velocity to 0\n\n# Activate Motors\nLeftMotor.spin(FORWARD) # LeftMotor at 0 Velocity\nRightMotor.spin(REVERSE) # RightMotor at 0 Velocity\n\nwhile True:\n    # Get Combined Axis X Position\n    turnAmount = (controller_1.axis1.position() + controller_1.axis4.position()) / 2 # (Axis 1 + Axis 2) / 2\n\n    # Update Stored Values\n    leftVelocity = turnAmount / (100 / velocityPercent) # Axis Positions * Max Velocity (LeftMotor)\n    rightVelocity = turnAmount / (100 / velocityPercent) # Axis Positions * Max Velocity (LeftMotor)\n\n    # Check if \"Forward\" or \"Reversed\" are Requested\n\n    # Forward\n    if controller_1.buttonR2.pressing():\n        leftVelocity += 50 # Increase LeftMotor End Velocity\n        rightVelocity -= 50 # Increase RightMotor End Velocity\n    \n    # Reverse\n    if controller_1.buttonL2.pressing():\n        leftVelocity -= 50 # Decrease RightMotor End Velocity\n        rightVelocity += 50 # Decrease RightMotor End Velocity\n\n    # Set Motor Velocity Values\n    LeftMotor.set_velocity(leftVelocity, PERCENT) # Set LeftMotor Velocity\n    RightMotor.set_velocity(rightVelocity, PERCENT) # Set RightMotor Velocity","textLanguage":"python","robotConfig":[{"port":[10],"name":"LeftMotor","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio18_1"},"triportSourcePort":22},{"port":[1],"name":"RightMotor","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio18_1"},"triportSourcePort":22},{"port":[],"name":"controller_1","customName":false,"deviceType":"Controller","deviceClass":"controller","setting":{"left":"","leftDir":"false","right":"","rightDir":"false","upDown":"","upDownDir":"false","xB":"","xBDir":"false","drive":"none","id":"primary"},"triportSourcePort":22}],"slot":0,"platform":"V5","sdkVersion":"20240802.15.00.00","appVersion":"4.0.8","fileFormat":"2.0.0","targetBrainGen":"First","v5Sounds":[{"name":"game over","url":"static/sounds/mixkit-arcade-retro-game-over-213.wav"}],"v5SoundsEnabled":false}